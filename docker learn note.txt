docker安装:
	curl -sSL https://get.docker.com/ | sh 

启动:
	service docker start
	
usermod -aG docker username
这样非root用户也能使用docker

docker run hello-world
docker -v
docker search tutorial
docker pull learn/tutorial 
docker run learn/tutorial echo "hello word"
docker run learn/tutorial apt-get install -y ping
docker ps -l //-n=2 最后创建的两个容器

docker run<=>docker create + docker start
docker stop
docker create ubuntu:14.04
docker rm 1bd40561d3de 
docker rm $(docker ps -a -q)

docker attach 778d0b719b68
为后台容器添加交互窗口

创建交互型容器
docker run -i -t --name=inspect_shell ubuntu /bin/bash // -i interactive -t terminal
创建后台型容器
docker run --name=daemon_while -d ubuntu /bin/sh -c "while true;do echo hello" //-d 开启Daemon模式。
	--restart=always
	--restart=1 退出码为1重启
	--restart=on-failure:5 退出码非0尝试重启5次


docker 保存镜像:
	docker commit 91 learn/ping 91为 docker 的镜像ID
	docker commit -m="message" --author="lj" 91 lj/mysql:v1 // repository/images:tag

获取docker的详细信息:
	docker inspect 778d0b719b68 //查看容器配置
	docker inspect --format='{{.Id}} {{.Name}}' 778d0b719b68 //json 显示特定值

当前镜像信息:
	docker images

docker发布:
	docker push learn/ping
	docker push arthur657834/ljtest //push到自己的docker仓库 rename your repository to <user>/<repo>
	
docker logs -f 778d0b719b68 --tail=5 -t
docker top 778d0b719b68

docker exec -d 778d0b719b68 touch /root/q.txt //在docker中执行命令
docker exec -t -i 778d0b719b68 /bin/bash //进入shell交互界面

导入导出镜像
docker export 778d0b719b68 > lj.rar
cat lj.rar | docker import - import:container // 或docker import url res:tag

使用dockerfile创建(跟makefile差不多)
docker build -t lj/mysql:v1 .
docker build -t lj/mysql:v1 git地址 //docker build -t arthur657834/docker-desktop github.com/rogaha/docker-desktop
	onbuild:新镜像指定此镜像为父镜像时执行

docker tag 85d54f4ba0cc arthur657834/ljtest //docker tag arthur657834/ljtest1 arthur657834/ljtest2 
修改REPOSITORY名
